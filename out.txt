STRING 'friend@example.com'
USE_KEYWORD use
IDENTIFIER strict
SEMICOLON ;
USE_KEYWORD use
IDENTIFIER warnings
SEMICOLON ;
USE_KEYWORD use
IDENTIFIER Email
DOUBLE_COLUMN_OPERATOR ::
IDENTIFIER MIME
SEMICOLON ;
MY_KEYWORD my
DOLLAR_SYMBOL $
IDENTIFIER message
ASSIGNMENT_OPERATOR =
IDENTIFIER Email
DOUBLE_COLUMN_OPERATOR ::
IDENTIFIER MIME
ARROW_OPERATOR ->
IDENTIFIER create
LEFT_PARENTH (
IDENTIFIER header_str
IMPLICATION_OPERATOR =>
LEFT_SQ_BRACKET [
IDENTIFIER From
IMPLICATION_OPERATOR =>
STRING 'you@example.com'
COMMA ,
IDENTIFIER To
IMPLICATION_OPERATOR =>
STRING 'friend@example.com'
COMMA ,
IDENTIFIER Subject
IMPLICATION_OPERATOR =>
STRING 'Happy birthday!'
COMMA ,
RIGHT_SQ_BRACKET ]
COMMA ,
IDENTIFIER attributes
IMPLICATION_OPERATOR =>
LEFT_CURLY_BRACKET {
IDENTIFIER encoding
IMPLICATION_OPERATOR =>
STRING 'quoted-printable'
COMMA ,
IDENTIFIER charset
IMPLICATION_OPERATOR =>
STRING 'ISO-8859-1'
COMMA ,
RIGHT_CURLY_BRACKET }
COMMA ,
IDENTIFIER body_str
IMPLICATION_OPERATOR =>
STRING "Happy birthday to you!\n"
COMMA ,
RIGHT_PARENTH )
SEMICOLON ;
MY_KEYWORD my
DOLLAR_SYMBOL $
STRING_REPLICATION_OPERATOR x
ASSIGNMENT_OPERATOR =
NUMBER 10.89e-120
SEMICOLON ;
USE_KEYWORD use
IDENTIFIER Email
DOUBLE_COLUMN_OPERATOR ::
IDENTIFIER Sender
DOUBLE_COLUMN_OPERATOR ::
IDENTIFIER Simple
IDENTIFIER qw
LEFT_PARENTH (
IDENTIFIER sendmail
RIGHT_PARENTH )
SEMICOLON ;
IDENTIFIER sendmail
LEFT_PARENTH (
DOLLAR_SYMBOL $
IDENTIFIER message
RIGHT_PARENTH )
SEMICOLON ;
END_OF_INPUT 
